scalar DateTime

input ListLimit {
    skip: Int = 0
    limit: Int = 10
}

input PeriodInput {
    from: DateTime!
    to: DateTime!
}

type Query {
    post(_id: Int!): Post
    user(_id: Int!): User
    productGeneralInformation(_id: Int!): ProductGeneralInformation!
    productOptionsSettings(_id: Int!): ProductOptionsSettings!
    productPricingInventory(_id: Int!): ProductPricingInventory!
    productAvailability(_id: Int!): ProductAvailability!
    productExtra(_id: Int!): ProductExtra!
    users(limit: ListLimit = {}, search: UsersSearchInput = {}): UsersList!
    posts(limit: ListLimit = {}, search: PostsSearchInput = {}): PostsList!
    products(limit: ListLimit = {}, search: ProductsSearchInput = {}): ProductsList!
}

interface ListNode {
    count: Int!
    skip: Int!
    limit: Int!
}

# Filters
input UsersSearchInput {
    _id: [Int!]
    name: String
    email: String
}

input PostsSearchInput {
    user_id: Int
    text: String
    created: PeriodInput
}

input ProductsSearchInput {
    _id: [Int!]
    idAli: [Int!]
    title: String
    vendor: [String!]
    status: [String!]
    date: [DateTime!]
}
# End Filters

# User
type UsersList implements ListNode {
    node: [User!]!
    count: Int!
    skip: Int!
    limit: Int!
}

type UserStats {
    posts: Int!
}

type User {
    _id: Int!
    name: String!
    email: String!
    password: String!
    posts: [Post!]!
    stats: UserStats!
    created: DateTime!
}
# End User

# Post
type PostsList implements ListNode {
    node: [Post!]!
    count: Int!
    skip: Int!
    limit: Int!
}

type Post {
    _id: Int!
    text: String!
    user: User!
    user_id: Int!
    created: DateTime!
}
# End Post

# Product
type ProductsList implements ListNode {
    node: [Product!]!
    count: Int!
    skip: Int!
    limit: Int!
}

type Product {
    _id: Int!
    image: String!
    title: String!
    idAli: Int!
    status: String!
    price: Float!
    listPrice: Float!
    quantity: Int!
    created: DateTime!
}

type ProductGeneralInformation {
    _id: Int!
    idAli: Int!
    image: String!
    title: String!
    status: String!
    price: Float!
    vendor: String!
    fullDescription: String!
    category: String!
    linkToDw: String!
    linkToAli: String!
}

type ProductOptionsSettings {
    _id: Int!
    optionsType: String!
    exceptionsType: String!
}

type ProductPricingInventory {
    _id: Int!
    idAli: Int!
    listPrice: Float!
    inStock: Int!
    zeroPriceAction: String!
    inventory: String!
    orderQuantityMin: Int!
    orderQuantityMax: Int!
    quantityStep: Int!
    listQuantityCount: Int!
    vat: Boolean!
}

type ProductAvailability {
    _id: Int!
    userGroups: [String!]!
    creationDate: DateTime!
    availSince: DateTime!
    outOfStockActions: String!
}

type ProductExtra {
    _id: Int!
    detailsView: [String!]!
    shortDescription: String!
    popularity: Int!
    searchWords: String!
    promoText: String!
}
# End Product